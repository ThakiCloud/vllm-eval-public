name: üê≥ Build and Push Docker Images

on:
  push:
    branches:
      - main
      - 'release/*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    name: üîç Detect Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      evalchemy: ${{ steps.filter.outputs.evalchemy }}

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            evalchemy:
              - 'docker/evalchemy.Dockerfile'
              - 'eval/evalchemy/**'
              - 'datasets/**'
              - 'scripts/standardize_evalchemy.py'

  build-evalchemy:
    name: üèóÔ∏è Build and Push Evalchemy Image
    needs: [changes]
    if: needs.changes.outputs.evalchemy == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.get_tag.outputs.tag }}
      image_name_lowercase: ${{ steps.set_lowercase_name.outputs.name }}
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set lowercase image name
        id: set_lowercase_name
        run: echo "name=$(echo '${{ env.IMAGE_NAME }}-evalchemy' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: ‚öôÔ∏è Generate timestamp-based image tag
        id: get_tag
        run: |
          TAG="release-$(date -u +'%Y%m%d-%H%M%S')"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Generated tag: ${TAG}"

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üìÑ Create requirements file
        run: |
          # Use existing requirements-evalchemy.txt file
          echo "Using existing requirements-evalchemy.txt for mlfoundations/Evalchemy"

      - name: üî® Build and Push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/evalchemy.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ steps.set_lowercase_name.outputs.name }}:${{ steps.get_tag.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: ‚úÖ Image Summary
        run: |
          echo "### ‚öóÔ∏è Evalchemy Image Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "**Digest:** ${{ steps.build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:**" >> $GITHUB_STEP_SUMMARY
          echo "`${{ env.REGISTRY }}/${{ steps.set_lowercase_name.outputs.name }}:${{ steps.get_tag.outputs.tag }}`" >> $GITHUB_STEP_SUMMARY

  update-manifest-for-evalchemy:
    name: üîÑ Update Manifest for Evalchemy
    needs: [build-evalchemy]
    if: github.event_name != 'pull_request' && needs.build-evalchemy.outputs.image_tag != ''
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Manifest Repository
        uses: actions/checkout@v4
        with:
          repository: ThakiCloud/vllm-manifests-public
          token: ${{ secrets.MANIFESTS_SECRET }}
          ref: main

      - name: üìù Update Image Tag in Manifest
        run: |
          IMAGE_TAG=${{ needs.build-evalchemy.outputs.image_tag }}
          IMAGE_NAME_LOWERCASE=${{ needs.build-evalchemy.outputs.image_name_lowercase }}
          MANIFEST_FILE=vllm-eval/evalchemy-job.yaml
          
          echo "Updating image in $MANIFEST_FILE to ${{ env.REGISTRY }}/${IMAGE_NAME_LOWERCASE}:$IMAGE_TAG"
          
          # Check if the file exists before attempting to modify it
          if [ -f "$MANIFEST_FILE" ]; then
            sed -i "s|image: ${{ env.REGISTRY }}/${IMAGE_NAME_LOWERCASE}:.*|image: ${{ env.REGISTRY }}/${IMAGE_NAME_LOWERCASE}:${IMAGE_TAG}|" $MANIFEST_FILE
          else
            echo "Error: Manifest file $MANIFEST_FILE not found."
            exit 1
          fi

      - name: üöÄ Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "CI: update evalchemy image to ${{ needs.build-evalchemy.outputs.image_tag }}"
          branch: main
          commit_options: '--no-verify'
          commit_user_name: 'yunjae-park1111'
          commit_user_email: 'yunjae.park@thakicloud.co.kr'
