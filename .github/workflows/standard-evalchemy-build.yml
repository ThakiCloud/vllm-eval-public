name: 🐳 Build Standard Evalchemy Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    name: 🔍 Detect Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      standard-evalchemy: ${{ steps.filter.outputs.standard-evalchemy }}

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            standard-evalchemy:
              - 'docker/standard-evalchemy.Dockerfile'
              - 'eval/standard_evalchemy/**'
              - 'scripts/standardize_evalchemy.py'
              - 'configs/standard_evalchemy.json'

  build-standard-evalchemy:
    name: 🏗️ Build and Push Standard Evalchemy Image
    needs: [changes]
    if: needs.changes.outputs.standard-evalchemy == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Set lowercase image name
        id: set_lowercase_name
        run: echo "name=$(echo '${{ env.IMAGE_NAME }}-standard-evalchemy' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: ⚙️ Generate release tag
        if: github.event_name != 'pull_request'
        id: generate_tag
        run: echo "tag=release-$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔨 Build and Push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/standard_evalchemy.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ steps.set_lowercase_name.outputs.name }}:${{ github.sha }}
            ${{ github.event_name != 'pull_request' && format('{0}/{1}:{2}', env.REGISTRY, steps.set_lowercase_name.outputs.name, steps.generate_tag.outputs.tag) || '' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: ✅ Image Summary
        if: github.event_name != 'pull_request'
        run: |
          echo "### ⚗️ Standard Evalchemy Image Built and Pushed" >> $GITHUB_STEP_SUMMARY
          echo "**Digest:** ${{ steps.build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "`${{ env.REGISTRY }}/${{ steps.set_lowercase_name.outputs.name }}:${{ github.sha }}`" >> $GITHUB_STEP_SUMMARY
          echo "`${{ env.REGISTRY }}/${{ steps.set_lowercase_name.outputs.name }}:${{ steps.generate_tag.outputs.tag }}`" >> $GITHUB_STEP_SUMMARY 